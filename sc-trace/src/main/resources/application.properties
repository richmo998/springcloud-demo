server.port=9411
#spring.application.name=sc-trace

## 配置zookeeper地址
spring.cloud.zookeeper.connect-string=localhost:2181
spring.cloud.zookeeper.discovery.enabled=true
spring.cloud.zookeeper.discovery.register=true

spring.cloud.zookeeper.discovery.instanceHost=localhost
spring.cloud.zookeeper.discovery.instancePort=${server.port}

#zipkin\u6570\u636e\u4fdd\u5b58\u5230\u6570\u636e\u5e93\u4e2d\u9700\u8981\u8fdb\u884c\u5982\u4e0b\u914d\u7f6e
#\u8868\u793a\u5f53\u524d\u7a0b\u5e8f\u4e0d\u4f7f\u7528sleuth
spring.sleuth.enabled=false

#\u672c\u5de5\u7a0b\u4e0d\u63a8\u9001\u5230zipkin
spring.zipkin.enabled=false



#elasticsearch存储
#zipkin.storage.StorageComponent=elasticsearch
#zipkin.storage.type=elasticsearch

#\u6570\u636e\u5e93\u811a\u672c\u521b\u5efa\u5730\u5740
##\u5982\u679c\u8868\u5df2\u7ecf\u521b\u5efa\u4e86\uff0c\u90a3\u4e48\u4e0d\u7528\u8bbe\u7f6espring.datasource.schema
##https://github.com/openzipkin/zipkin/tree/master/zipkin-storage/mysql-v1/src/main/resources/mysql.sql
#mysql存储引擎
zipkin.storage.type=mysql
spring.datasource.schema=classpath:/zipkin.sql

#spring boot\u6570\u636e\u6e90\u914d\u7f6e

spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

spring.datasource.url=jdbc:mysql://172.17.209.6:3306/test_myf
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.initialize=true
spring.datasource.continue-on-error=true

## Mybatis 配置（持久层框架自己选择）
mybatis.typeAliasesPackage=com.xiaobudiankeji.base.entity
mybatis.mapperLocations=classpath*:mapper/*.xml

#durid登陆账号密码
loginUsername=root
loginPassword=123456
# 下面为连接池的补充设置，应用到上面所有数据源中
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙,防止sql注入
spring.datasource.filters=stat,wall,log4j
spring.datasource.logSlowSql=true

#http://localhost:8765/druid/sql.html  访问这个页面




